{% extends 'base.html.twig' %}

{% block body %}

    <div class="container-fluid" id="formulaire1">

        <div class="col-lg-4 col-sm-8 col-md-8 mx-auto col-12" id="search-address-wrap">
            <form action="" method="POST" id="form1">

                <div class="col-lg-12 col-sm-12 col-md-12 mx-auto col-12">
                    <label for="name"><h2>Recherchez un Nom</h2></label><br>
                    <input style="text-align: center" class="form-control" type="text" id="name" name="name" placeholder="Entrez un nom..." autofocus><br><br>
                </div>

                <div class="col-lg-12 col-sm-12 col-md-12 mx-auto col-12">
                    <label for="adress"><h2>Rechercher une adresse</h2></label><br>
                    <input style="text-align: center" class="form-control" type="text" id="adress" name="adress" placeholder="Entrez une adresse..." autofocus><br><br>
                </div>
                <button id="search-btn" type="submit" class="animated bounceInDown btn btn-success" name="button">Rechercher</button>
            </form>
            <div class="col-12">
              <a href="/report/new">Signaler une adresse</a>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-10 mx-auto">
                <div id="result" class="alert"></div>
            </div>
            <div class="col-lg-6 mx-auto" id="map"></div>
        </div>
          <button type="btn btn-secondary" type="" class="directions-btn" name="button-directions">Directions</button>
          <button type="btn btn-secondary" name="button-route" class="route">Itin√©raire vers ce lieux depuis ma position</button>
    </div>
    <!-- <div class="" id="warnings-panel"></div> -->


    <script>
        $(function() {
            $('#form1').on('submit', function() {
                var result = $('#result')
                var datas = $(this).serialize()
                $.ajax({
                    method: 'post',
                    url: '',
                    data: datas,
                    dataType: 'json',
                    success: function(data) {
                        result.html(data.message)
                        switch (data.status) {
                            case 'ok':
                                    result.removeClass('alert-danger')
                                    result.addClass('alert-success')
                                break
                            case 'ko':
                                    result.removeClass('alert-success')
                                    result.addClass('alert-danger')
                                break
                        }
                    },
                    error: function(data) {
                        console.log(data)
                    }
                })
                return false;
            })

        })

        function initMap() {
          var geocoder = new google.maps.Geocoder();
          var directionsService = new google.maps.DirectionsService;
          var directionsDisplay = new google.maps.DirectionsRenderer;
          var map = new google.maps.Map(document.getElementById('map'), {
              zoom: 14,
              center: {lat: 45.750000, lng: 4.850000}
          });
          var bounds = new google.maps.LatLngBounds();
          var markers = []; // array of position
          var markerArray = []; // array of marker object
          var stepDisplay = new google.maps.InfoWindow;

          directionsDisplay.setMap(map);
          document.getElementById('search-btn').addEventListener('click', function() {
              geocodeAddress(geocoder, map, markerArray);
          });
          $('.directions-btn').on('click', function() {
            getAndDisplayDirection(map, bounds, markers, markerArray);
          })
          $('.route').on('click', function() {
             calculateAndDisplayRoute(directionsService, directionsDisplay, markerArray, stepDisplay, map)
          })
          //******************************

          // *** INITIALISAITON ***

          // *** END INITIALISATION ***
           //  document.getElementById('search-btn').addEventListener('click', function() {
           //     geocodeAddress(geocoder, map, markers);
           // });
        }

        function geocodeAddress(geocoder, resultsMap, markerArray) {
            var address = document.getElementById('adress').value;
            geocoder.geocode({'address': address}, function(results, status) {
                if (status === 'OK') {
                  for (var i = 0; i < markerArray.length; i++) {
                    markerArray[i].setMap(null);
                  }
                  markerArray = [];
                    resultsMap.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: resultsMap,
                        position: results[0].geometry.location,
                    });
                    markerArray.push(marker);
                    // console.log(markerArray);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay, markerArray, stepDisplay, map) {
          if (markerArray.length > 0) {
            // First, remove any existing markers from the map.
            for (var i = 0; i < markerArray.length; i++) {
              markerArray[i].setMap(null);
            }
            var origin = markerArray[0];
            var destination = markerArray[1];
            directionsService.route({
              origin: {lat: origin.position.lat(), lng: origin.position.lng()},
              destination: {lat: destination.position.lat(), lng: destination.position.lng()},
              travelMode: 'WALKING'
            }, function(response, status) {
              if (status === 'OK') {
                directionsDisplay.setDirections(response);
                showSteps(response, markerArray, stepDisplay, map);
              } else {
                window.alert('Directions request failed due to ' + status);
              }
            });
          }
        }

        function showSteps(directionResult, markerArray, stepDisplay, map) {
        // For each step, place a marker, and add the text to the marker's infowindow.
        // Also attach the marker to an array so we can keep track of it and remove it
        // when calculating new routes.
        var myRoute = directionResult.routes[0].legs[0];
        // display distance and duration:
        // directionResult.routes[0].legs[0].distance.text
        // directionResult.routes[0].legs[0].duration.text
        // Warning :
        // directionResult.routes[0].warnings[0]
        for (var i = 0; i < myRoute.steps.length; i++) {
          var marker = markerArray[i] = markerArray[i] || new google.maps.Marker;
          marker.setMap(map);
          marker.setPosition(myRoute.steps[i].start_location);
          attachInstructionText(
              stepDisplay, marker, myRoute.steps[i].instructions, map);

          // start and end location of each step:
          // directionResult.routes[0].legs[0].steps[i].start_location.lat()
          // directionResult.routes[0].legs[0].steps[i].start_location.lng()
          //
          // directionResult.routes[0].legs[0].steps[i].end_location.lat()
          // directionResult.routes[0].legs[0].steps[i].end_location.lng()
          // debugger;

        }
      }

      function attachInstructionText(stepDisplay, marker, text, map) {
       google.maps.event.addListener(marker, 'click', function() {
         // Open an info window when the marker is clicked on, containing the text
         // of the step.
         stepDisplay.setContent(text);
         stepDisplay.open(map, marker);
       });
     }


        function getAndDisplayDirection(map, bounds, markers, markerArray) {
          console.log(markerArray);
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
              // array instead of object {}
              var pos = [position.coords.latitude,position.coords.longitude];
              var center = [45.750000,4.850000];
              markers.push(pos);
              markers.push(center);
              // Multiple markers on a single map
              for( i = 0; i < markers.length; i++ ) {
                var position = new google.maps.LatLng(markers[i][0], markers[i][1]);
                bounds.extend(position);
                marker = new google.maps.Marker({
                  map: map,
                  position: position,
                });
                map.fitBounds(bounds);
                markerArray.push(marker);
              }
            }, function() {
              handleLocationError(true, map, map.getCenter());
            });
          } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, map, map.getCenter());
          }
          //********************************
        }
    </script>

{% endblock  %}
